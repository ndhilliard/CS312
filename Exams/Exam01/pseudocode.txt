InterquartileRange(A[])

1 n <- A.length
2 for i <- 0 to n - 1, do
 2.1 m <- i
 2.2 for j <- i + 1 to n -1, do
  2.2.1 if A[m] > A[j], then
   2.2.1.1 m <- j
  2.3 if m != i, then
   2.3.1 t <- A[i]
   2.3.2 A[i] <- A[m]
   2.3.3 A[m] <- t
3 if n % 2 = 0, then
 3.1 lH <- {A[0] to A[n/2 - 1]}
 3.2 uH <- {A[n/2] to A[n - 1]}
4 else 
 4.1 lH <- {A[0] to A[n/2 - 1]}
 4.2 uH <- {A[n/2] to A[n - 1]}
5 m1 <- size of lH
6 if m1 % 2 = 0, then
 6.1 q1 <- (lH[(m1/2) - 1] + lH[m1/2]) / 2
7 else 
 7.1 q1 <- lH[m/2]
8. m2 <- size of uH
9 if m2 % 2 = 0, then
 9.1 q3 <- (uH[m2/2) -1] + uH[m2/2] / 2
10 else
 10.1 q3 <- uH[m2/2]
11 return q3 - q1